import { ITester } from './abstractions';
/**
 * Core that is responsible for holding a set of testers
 */
export declare class Core {
    private errors;
    private testers;
    private locale;
    /**
     * Construct core with testers
     * @param   testers  Set of tester this core will use for validation
     */
    constructor(...testers: ITester[]);
    /**
     * Set the locale that will be passed to testers
     * @param locale The locale to set
     */
    setLocale(locale: string): void;
    /**
     * Validates a single value against this core's testers
     * @param value The value to validate
     * @returns     True if the value passes
     */
    validate(value: any): boolean;
    /**
     * Gets all the errors of the last [[validate]] run
     * @returns An array of errors
     */
    getErrors(): string[];
    /**
     * Allows the adding of new testers. Duplicates that are already
     * added will be ignored.
     * @param testersAdd Testers to add
     */
    addTesters(...testersAdd: ITester[]): void;
    /**
     * Allows the removing of testers attached to core.
     * @param testersRemove Testers to remove
     */
    removeTesters(...testersRemove: ITester[]): void;
    /**
     * Removes all the testers attached to core
     */
    removeAllTesters(): void;
}
